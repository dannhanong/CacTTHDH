/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pkg4tt;

import java.util.*;
import javax.swing.ButtonGroup;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class TTs extends javax.swing.JFrame {

    DefaultTableModel model;

    /**
     * Creates new form FCFS
     */
    public TTs() {
        initComponents();
        DefaultTableModel model = new DefaultTableModel();
        table.setModel(model);
        model.addColumn("PID");
        model.addColumn("Arrival Time");
        model.addColumn("Burst Time");
        model.addColumn("Complete Time");
        model.addColumn("Turn Time");
        model.addColumn("Wasting Time");
        ButtonGroup bg = new ButtonGroup();
        bg.add(rdoRR);
        bg.add(rdoFCFS);
        bg.add(rdoSJF);
        bg.add(rdoSRTN);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtfAR = new javax.swing.JTextField();
        rdoFCFS = new javax.swing.JRadioButton();
        rdoSJF = new javax.swing.JRadioButton();
        rdoRR = new javax.swing.JRadioButton();
        rdoSRTN = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jlbAvgwt = new javax.swing.JLabel();
        jtfPID = new javax.swing.JTextField();
        jtfBT = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        btThem = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        rdoFCFS.setText("First Come First Serve");

        rdoSJF.setText("Shortest Job First");

        rdoRR.setText("Round Robin");

        rdoSRTN.setText("Shortest Remaining Time Next");

        jButton1.setText("Xác nhận");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jtfPID.setText("1");

        jLabel1.setText("PID");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("arrival time");

        jLabel3.setText("AVG Waste Time: ");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("brust time");

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "PID", "Arrival Time", "Burst Time", "Title 4", "Title 5", "Title 6"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);

        btThem.setText("Thêm");
        btThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btThemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(jtfPID, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(16, 16, 16)
                                        .addComponent(jLabel1)))
                                .addGap(51, 51, 51)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtfAR, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(49, 49, 49)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jlbAvgwt, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jtfBT, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(49, 49, 49)
                                        .addComponent(btThem))
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rdoFCFS)
                                    .addComponent(rdoSJF))
                                .addGap(51, 51, 51)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rdoSRTN)
                                    .addComponent(rdoRR))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 181, Short.MAX_VALUE)
                                .addComponent(jButton1))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfBT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfAR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfPID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btThem))
                .addGap(37, 37, 37)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdoFCFS)
                            .addComponent(rdoRR))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdoSJF)
                            .addComponent(rdoSRTN))
                        .addGap(15, 15, 15))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addGap(22, 22, 22)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlbAvgwt, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE))
                .addContainerGap(7, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btThemActionPerformed
        // TODO add your handling code here:
        int pid = Integer.parseInt(jtfPID.getText());
        int ar = Integer.parseInt(jtfAR.getText());
        int bt = Integer.parseInt(jtfBT.getText());
        Object[] giaTri = {pid, ar, bt};
        model = (DefaultTableModel) table.getModel();
        model.addRow(new Object[]{pid, ar, bt});
    }//GEN-LAST:event_btThemActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int rowCount = model.getRowCount();
        int[] pid = new int[model.getRowCount()];
        int[] ar = new int[model.getRowCount()];
        int[] bt = new int[model.getRowCount()];
        int[] ct = new int[model.getRowCount()];
        int[] ta = new int[model.getRowCount()];
        int wt[] = new int[model.getRowCount()];
        int temp;
        float avgwt = 0, avgta = 0;

        for (int i = 0; i < rowCount; i++) {
            pid[i] = (int) model.getValueAt(i, 0);
        }
        for (int i = 0; i < rowCount; i++) {
            ar[i] = (int) model.getValueAt(i, 1);
        }
        for (int i = 0; i < rowCount; i++) {
            bt[i] = (int) model.getValueAt(i, 2);
        }

        //FCFS
        if (rdoFCFS.isSelected()) {
            for (int i = 0; i < rowCount; i++) {
                for (int j = 0; j < rowCount - (i + 1); j++) {
                    if (ar[j] > ar[j + 1]) {
                        temp = ar[j];
                        ar[j] = ar[j + 1];
                        ar[j + 1] = temp;
                        temp = bt[j];
                        bt[j] = bt[j + 1];
                        bt[j + 1] = temp;
                        temp = pid[j];
                        pid[j] = pid[j + 1];
                        pid[j + 1] = temp;
                    }
                }
            }
            for (int i = 0; i < rowCount; i++) {
                if (i == 0) {
                    ct[i] = ar[i] + bt[i];
                } else {
                    if (ar[i] > ct[i - 1]) {
                        ct[i] = ar[i] + bt[i];
                    } else {
                        ct[i] = ct[i - 1] + bt[i];
                    }
                }
                ta[i] = ct[i] - ar[i];
                wt[i] = ta[i] - bt[i];
                avgwt += wt[i];
                avgta += ta[i];
            }
            for (int i = 0; i < rowCount; i++) {
                model.setValueAt(ct[i], i, 3);
                model.setValueAt(ta[i], i, 4);
                model.setValueAt(wt[i], i, 5);
            }
            jlbAvgwt.setText(avgwt/rowCount + "");
        }

        //SJF
        else if (rdoSJF.isSelected()) {
            int f[] = new int[rowCount];
            int st = 0, tot = 0;

            for (int i = 0; i < rowCount; i++) {
                f[i] = 0;
            }
            while (true) {
                int c = rowCount, min = 999999;

                if (tot == rowCount) {
                    break;
                }

                for (int i = 0; i < rowCount; i++) {

                    if ((ar[i] <= st) && (f[i] == 0) && (bt[i] < min)) {
                        min = bt[i];
                        c = i;
                    }
                }
                if (c == rowCount) {
                    st++;
                } else {
                    ct[c] = st + bt[c];
                    st += bt[c];
                    ta[c] = ct[c] - ar[c];
                    wt[c] = ta[c] - bt[c];
                    f[c] = 1;
                    pid[tot] = c + 1;
                    tot++;
                    
                    avgwt += wt[c];
                    avgta += ta[c];
                }
            }
            for(int i=0; i<rowCount; i++){
                model.setValueAt(ct[i], i, 3);
                model.setValueAt(ta[i], i, 4);
                model.setValueAt(wt[i], i, 5);
            }
            jlbAvgwt.setText(avgwt/rowCount + "");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TTs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TTs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TTs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TTs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new TTs().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btThem;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jlbAvgwt;
    private static javax.swing.JTextField jtfAR;
    private static javax.swing.JTextField jtfBT;
    private static javax.swing.JTextField jtfPID;
    private javax.swing.JRadioButton rdoFCFS;
    private javax.swing.JRadioButton rdoRR;
    private javax.swing.JRadioButton rdoSJF;
    private javax.swing.JRadioButton rdoSRTN;
    private static javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
